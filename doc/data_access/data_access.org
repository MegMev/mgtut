
#+OPTIONS: num:1 toc:0 reveal_width:1700 reveal_height:1000
# #+OPTIONS: reveal_global_header:t reveal_global_footer:t
#+REVEAL_THEME: black
#+REVEAL_TRANS: fade
#+REVEAL_EXTRA_CSS: ./local.css
# #+REVEAL_EXTRA_SCRIPT:
#+REVEAL_TITLE_SLIDE: <h1 class="title">%t</h1><em>%s</em><br><br>%a<br>%d
#+REVEAL_INIT_OPTIONS: width:1200, height:800, controlsLayout: 'bottom-right', slideNumber:"c/t", margin: 0, minScale:0.2, maxScale:2.5, menu: {side: 'left', titleSelector: 'h1, h2, h3, h4, h5, h6', hideMissingTitles: false, markers: true, custom: false, themes: true, transitions: true, openButton: true, openSlideNumber: false, keyboard: true, sticky: false, autoOpen: true}, chalkboard: {boardmarkerWidth: 8,	toggleChalkboardButton: { left: "80px" }, toggleNotesButton: { left: "130px"}}
#+REVEAL_PLUGINS: (highlight)

#+Title: Data Access: Transient Event Store
#+Author: Yong Zhou
#+Email: zyong06@gmail.com

#+REVEAL_ROOT: https://cdn.jsdelivr.net/npm/reveal.js
#+REVEAL_VERSION: 4
#+REVEAL_ADD_PLUGIN: chalkboard RevealChalkboard https://cdn.jsdelivr.net/gh/rajgoel/reveal.js-plugins/chalkboard/plugin.js
#+REVEAL_ACADEMIC_TITLE: Dr.

* Link to this presentation
[[https://github.com/MegMev/mgtut/blob/main/doc/data_access.html]]

* Seperate repository for tutorial
[[https://github.com/MegMev/mgtut.git]]

- New examples will be added here.
- Also acts as a start point for algorithm development

* Task last week
- noise adding: [[https://github.com/MegMev/mgtut/blob/main/examples/components/MgTut_AddNoise.cpp][MgTut_AddNoise]]
- draw the energy hist: [[https://github.com/MegMev/mgtut/blob/main/examples/components/MgTut_DrawCaloEnergy.cpp][MgTut_DrawCaloEnergy]]
- job option: [[https://github.com/MegMev/mgtut/blob/main/examples/options/tut_addnoise.py][tut_addnoise.py]]

Any issues?

* Event Data Access in Gaudi/k4megat
** Two forms of event data:
- on disk: Persistency (ROOT file)
- on memory: Transient (during job running)

** Transient Event Store (TES) of Gaudi:
- Acts as a registry book of all event data during job run:
  - Generated by the simulation
  - Loaded from disk
  - Output from algorithms
- The record book is shared by all algorithms
- tree structure support:
  - top level in k4megat: '/Event'
  - use relative path in job option: 'xxx/yyy' -> '/Event/xxx/yyy'
- PodioDataSvc in k4megat's Event Data Store that handles EDM4hep
- PodioInput is the algorithm that loads data from ROOT file
  - registered under '/Event' hard coded
- PodioOutput is the algorithm that saves data in TES into ROOT file
  - flattened tree structure: '/Event/xxx/yyy/zzz' -> 'zzz' in 'events' tree

* Chaining example
An example showing how to chain several algorithms and how later algorithm can access output
from any previous algorithms (a big plus against REST).

job option: https://github.com/MegMev/mgtut/blob/main/examples/options/tut_chain.py

[[file:data_access.png]]
